// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum GameState {
  IN_PROGRESS
  FINISHED
}

model User {
  id                 String             @id @default(uuid())
  email              String             @unique
  password           String
  firstName          String
  lastName           String
  questionCategories QuestionCategory[] @relation
  startedGames       Game[]             @relation
}

model QuestionCategory {
  id        String     @id @default(uuid())
  name      String
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  questions Question[] @relation
  order     Int?

  @@unique([userId, name])
}

model Question {
  id            String           @id @default(uuid())
  category      QuestionCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    String
  answers       Answer[]         @relation
  correctAnswer String?
  text          String
}

model Answer {
  id         String   @id @default(uuid())
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  text       String
  order      Int?
}

model Game {
  id              String    @id @default(uuid())
  startedById     String
  startedBy       User      @relation(fields: [startedById], references: [id])
  currentPlayerId String?
  nextPlayerId    String?
  state           GameState
  players         Player[]  @relation
  startedAt       DateTime  @default(now())
}

model Player {
  id     String @id @default(uuid())
  name   String
  points Int    @default(0)
  gameId String
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  order  Int
}
